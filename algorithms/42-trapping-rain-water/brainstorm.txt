// wrong v1

# height = [0,1,0,2,1,0,1,3,2,1,2,1]
height=[4,2,3]

def water(input):
  left = 0
  right = len(height) - 1
  total_water = 0
  lbound_height = 0
  rbound_height = 0

  while left < right:
    lbound_height = height[left]
    rbound_height = height[right]
    while (left < right and lbound_height > height[left+1]):
      total_water += lbound_height - height[left+1]
      left +=1
    else:
      if (left < right):
        left +=1
    while (left < right and rbound_height > height[right-1]):
      total_water += rbound_height - height[right-1]
      right -=1
    else:
      if (left < right):
        right -=1

  return total_water

print(water(height))



// v2 removed

  # while left < right:
  #   if (height[left] > height[left+1]):
  #     total_water += height[left] - height[left+1]
  #     if (height[left] == height[left+1]):
  #       total_water +=
  #     left +=1
  #   elif (height[left] <= height[left+1]):
  #     left +=1
    
  #   if (height[right] > height[right-1]):
  #     total_water += height[right] - height[right-1]
  #     right -=1
  #   elif (height[right] <= height[right-1]):
  #     right -=1
  # return total_water

  // v3 wrong, adding multiple times when considering middle popped
  multiple considerations of the same heights

    while left < right:
    popped_height = height[left + 1: right]
    for n in popped_height:
      if (n < (height[left] and n < height[right])):
        bucket += min(height[left], height[right]) - n
        if (height[left] > height[right]):
          right -=1
        else:
          left +=1
  return bucket


   while left < right:
      

      if height[left + 1] > min(height[left], height[temp_right]):
        bucket += min(height[left], height[temp_right]) - height[left + 1]

      left += 1
  return bucket

print(water(height))


height=[4,2,3]

def water(height):
  left = 0
  right = len(height) - 1
  left_max = 0
  right_max = 0
  bucket = 0

  while left < right:
    left_max = max(height[left],left_max)
    right_max = max(height[right],right_max)
    min_bar = min(left_max, right_max)

    if height[left] <= height[right]:
      bucket += max(0, min_bar - height[left])
      left += 1
    elif height[left] > height[right]:
      bucket += max(0, min_bar - height[right])
      right -= 1
      

  return bucket




print(water(height))